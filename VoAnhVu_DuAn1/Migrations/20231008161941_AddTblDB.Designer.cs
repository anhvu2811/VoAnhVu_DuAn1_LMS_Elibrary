// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VoAnhVu_DuAn1.Model;

namespace VoAnhVu_DuAn1.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20231008161941_AddTblDB")]
    partial class AddTblDB
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("VoAnhVu_DuAn1.Entity.AnswerEntity", b =>
                {
                    b.Property<string>("AnswerId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AnswerText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QuestionId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("AnswerId");

                    b.HasIndex("QuestionId");

                    b.ToTable("Answer");
                });

            modelBuilder.Entity("VoAnhVu_DuAn1.Entity.ClassEntity", b =>
                {
                    b.Property<string>("ClassId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ClassName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClassId");

                    b.ToTable("Class");
                });

            modelBuilder.Entity("VoAnhVu_DuAn1.Entity.EnrollmentEntity", b =>
                {
                    b.Property<string>("EnrollmentId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ClassId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SubjectId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("EnrollmentId");

                    b.HasIndex("ClassId");

                    b.HasIndex("SubjectId");

                    b.HasIndex("UserId");

                    b.ToTable("Enrollment");
                });

            modelBuilder.Entity("VoAnhVu_DuAn1.Entity.ExamEntity", b =>
                {
                    b.Property<string>("ExamId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExamName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.HasKey("ExamId");

                    b.ToTable("Exam");
                });

            modelBuilder.Entity("VoAnhVu_DuAn1.Entity.ExamResultEntity", b =>
                {
                    b.Property<string>("ExamResultId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ExamId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<float>("Score")
                        .HasColumnType("real");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ExamResultId");

                    b.HasIndex("ExamId");

                    b.HasIndex("UserId");

                    b.ToTable("ExamResult");
                });

            modelBuilder.Entity("VoAnhVu_DuAn1.Entity.HelpEntity", b =>
                {
                    b.Property<string>("HelpId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("HelpId");

                    b.HasIndex("UserId");

                    b.ToTable("Help");
                });

            modelBuilder.Entity("VoAnhVu_DuAn1.Entity.LectureEntity", b =>
                {
                    b.Property<string>("LectureId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FileUpload")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Time")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LectureId");

                    b.ToTable("Lecture");
                });

            modelBuilder.Entity("VoAnhVu_DuAn1.Entity.QuestionBankEntity", b =>
                {
                    b.Property<string>("QuestionBankId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Level")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QuestionBankName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("QuestionBankId");

                    b.ToTable("QuestionBank");
                });

            modelBuilder.Entity("VoAnhVu_DuAn1.Entity.QuestionEntity", b =>
                {
                    b.Property<string>("QuestionId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LectureId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("QuestionText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("QuestionId");

                    b.HasIndex("LectureId");

                    b.HasIndex("UserId");

                    b.ToTable("Question");
                });

            modelBuilder.Entity("VoAnhVu_DuAn1.Entity.QuestionExamEntity", b =>
                {
                    b.Property<string>("QuestionExamId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ExamId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("QuestionId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("QuestionExamId");

                    b.HasIndex("ExamId");

                    b.HasIndex("QuestionId");

                    b.ToTable("QuestionExam");
                });

            modelBuilder.Entity("VoAnhVu_DuAn1.Entity.QuestionsEntity", b =>
                {
                    b.Property<string>("QuestionId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("QuestionBankId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("QuestionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QuestionType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("QuestionId");

                    b.HasIndex("QuestionBankId");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("VoAnhVu_DuAn1.Entity.RoleEntity", b =>
                {
                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoleId");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("VoAnhVu_DuAn1.Entity.SubjectEntity", b =>
                {
                    b.Property<string>("SubjectId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SubjectName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TopicId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("SubjectId");

                    b.HasIndex("TopicId");

                    b.ToTable("Subject");
                });

            modelBuilder.Entity("VoAnhVu_DuAn1.Entity.TopicEntity", b =>
                {
                    b.Property<string>("TopicId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TopicName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TopicId");

                    b.ToTable("Topic");
                });

            modelBuilder.Entity("VoAnhVu_DuAn1.Entity.UserEntity", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Avatar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.HasIndex("RoleId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("VoAnhVu_DuAn1.Entity.AnswerEntity", b =>
                {
                    b.HasOne("VoAnhVu_DuAn1.Entity.QuestionEntity", "Question")
                        .WithMany()
                        .HasForeignKey("QuestionId");

                    b.Navigation("Question");
                });

            modelBuilder.Entity("VoAnhVu_DuAn1.Entity.EnrollmentEntity", b =>
                {
                    b.HasOne("VoAnhVu_DuAn1.Entity.ClassEntity", "Class")
                        .WithMany()
                        .HasForeignKey("ClassId");

                    b.HasOne("VoAnhVu_DuAn1.Entity.SubjectEntity", "Subject")
                        .WithMany()
                        .HasForeignKey("SubjectId");

                    b.HasOne("VoAnhVu_DuAn1.Entity.UserEntity", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("Class");

                    b.Navigation("Subject");

                    b.Navigation("User");
                });

            modelBuilder.Entity("VoAnhVu_DuAn1.Entity.ExamResultEntity", b =>
                {
                    b.HasOne("VoAnhVu_DuAn1.Entity.ExamEntity", "Exam")
                        .WithMany()
                        .HasForeignKey("ExamId");

                    b.HasOne("VoAnhVu_DuAn1.Entity.UserEntity", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("Exam");

                    b.Navigation("User");
                });

            modelBuilder.Entity("VoAnhVu_DuAn1.Entity.HelpEntity", b =>
                {
                    b.HasOne("VoAnhVu_DuAn1.Entity.UserEntity", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("VoAnhVu_DuAn1.Entity.QuestionEntity", b =>
                {
                    b.HasOne("VoAnhVu_DuAn1.Entity.LectureEntity", "Lecture")
                        .WithMany()
                        .HasForeignKey("LectureId");

                    b.HasOne("VoAnhVu_DuAn1.Entity.UserEntity", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("Lecture");

                    b.Navigation("User");
                });

            modelBuilder.Entity("VoAnhVu_DuAn1.Entity.QuestionExamEntity", b =>
                {
                    b.HasOne("VoAnhVu_DuAn1.Entity.ExamEntity", "Exam")
                        .WithMany()
                        .HasForeignKey("ExamId");

                    b.HasOne("VoAnhVu_DuAn1.Entity.QuestionsEntity", "Question")
                        .WithMany()
                        .HasForeignKey("QuestionId");

                    b.Navigation("Exam");

                    b.Navigation("Question");
                });

            modelBuilder.Entity("VoAnhVu_DuAn1.Entity.QuestionsEntity", b =>
                {
                    b.HasOne("VoAnhVu_DuAn1.Entity.QuestionBankEntity", "QuestionBank")
                        .WithMany()
                        .HasForeignKey("QuestionBankId");

                    b.Navigation("QuestionBank");
                });

            modelBuilder.Entity("VoAnhVu_DuAn1.Entity.SubjectEntity", b =>
                {
                    b.HasOne("VoAnhVu_DuAn1.Entity.TopicEntity", "Topic")
                        .WithMany()
                        .HasForeignKey("TopicId");

                    b.Navigation("Topic");
                });

            modelBuilder.Entity("VoAnhVu_DuAn1.Entity.UserEntity", b =>
                {
                    b.HasOne("VoAnhVu_DuAn1.Entity.RoleEntity", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId");

                    b.Navigation("Role");
                });
#pragma warning restore 612, 618
        }
    }
}
